Bubble sort:
def bubble_sort(arr):
  swapped = True
  while swapped:
    swapped = False
    for i in range(len(arr) - 1):
      if arr[i] > arr[i + 1]:
        # Swap the elements
        arr[i], arr[i + 1] = arr[i + 1], arr[i]
        swapped = True
  return arr

print(bubble_sort([3, 2, 1]))  # Should print [1, 2, 3]
print(bubble_sort([1, 2, 3]))  # Should print [1, 2, 3]





Merge sort:


def merge_sort(arr):
  # Base case: if the array has fewer than 2 elements, it is already sorted
  if len(arr) < 2:
    return arr
  # Split the array in half
  mid = len(arr) // 2
  left = arr[:mid]
  right = arr[mid:]
  # Recursively sort the two halves
  left = merge_sort(left)
  right = merge_sort(right)
  # Merge the sorted halves
  return merge(left, right)

def merge(left, right):
  result = []
  while left and right:
    if left[0] < right[0]:
      result.append(left.pop(0))
    else:
      result.append(right.pop(0))
  # Add any remaining elements
  result.extend(left)
  result.extend(right)
  return result
print(merge_sort([3, 2, 1,453,42,53]))  # Should print [1, 2, 3]
print(merge_sort([1, 2, 3]))






